{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhishek\\\\OneDrive\\\\Desktop\\\\React_New\\\\Auth\\\\my-app\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // Assuming you use React Router for navigation\nimport { auth, GoogleAuthProvider, signInWithPopup } from \"./firebase\"; // Adjust import path as per your firebase setup\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const history = useHistory();\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        history.push(\"/profile\"); // Redirect to profile if user is already logged in\n      }\n    });\n    return () => unsubscribe();\n  }, [history]);\n  const googleLogin = () => {\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(auth, provider).then(result => {\n      console.log(result);\n      if (result.user) {\n        toast.success(\"User Logged In Successfully\", {\n          position: \"top-center\"\n        });\n        history.push(\"/profile\"); // Redirect after successful login\n      }\n    }).catch(error => {\n      console.error(\"Google Sign-in Error:\", error);\n      toast.error(\"Failed to sign in with Google\", {\n        position: \"top-center\"\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-xs\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: googleLogin,\n            className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n            type: \"button\",\n            children: \"Log In with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500 text-xs\",\n        children: \"\\xA92020 Acme Corp. All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useHistory","auth","GoogleAuthProvider","signInWithPopup","toast","jsxDEV","_jsxDEV","Login","_s","history","unsubscribe","onAuthStateChanged","user","push","googleLogin","provider","then","result","console","log","success","position","catch","error","className","children","onClick","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Abhishek/OneDrive/Desktop/React_New/Auth/my-app/src/components/Login.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\"; // Assuming you use React Router for navigation\r\nimport { auth, GoogleAuthProvider, signInWithPopup } from \"./firebase\"; // Adjust import path as per your firebase setup\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        history.push(\"/profile\"); // Redirect to profile if user is already logged in\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [history]);\r\n\r\n  const googleLogin = () => {\r\n    const provider = new GoogleAuthProvider();\r\n    signInWithPopup(auth, provider)\r\n      .then((result) => {\r\n        console.log(result);\r\n        if (result.user) {\r\n          toast.success(\"User Logged In Successfully\", {\r\n            position: \"top-center\",\r\n          });\r\n          history.push(\"/profile\"); // Redirect after successful login\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Google Sign-in Error:\", error);\r\n        toast.error(\"Failed to sign in with Google\", {\r\n          position: \"top-center\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n      <div className=\"w-full max-w-xs\">\r\n        <form className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\r\n          {/* Your form fields */}\r\n          <div className=\"flex items-center justify-center\">\r\n            <button\r\n              onClick={googleLogin}\r\n              className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n              type=\"button\"\r\n            >\r\n              Log In with Google\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <p className=\"text-center text-gray-500 text-xs\">\r\n          &copy;2020 Acme Corp. All rights reserved.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,UAAU,QAAQ,kBAAkB,CAAC,CAAC;AAC/C,SAASC,IAAI,EAAEC,kBAAkB,EAAEC,eAAe,QAAQ,YAAY,CAAC,CAAC;AACxE,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,OAAO,GAAGT,UAAU,CAAC,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACd,MAAMW,WAAW,GAAGT,IAAI,CAACU,kBAAkB,CAAEC,IAAI,IAAK;MACpD,IAAIA,IAAI,EAAE;QACRH,OAAO,CAACI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;MAC5B;IACF,CAAC,CAAC;IAEF,OAAO,MAAMH,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACD,OAAO,CAAC,CAAC;EAEb,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAG,IAAIb,kBAAkB,CAAC,CAAC;IACzCC,eAAe,CAACF,IAAI,EAAEc,QAAQ,CAAC,CAC5BC,IAAI,CAAEC,MAAM,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnB,IAAIA,MAAM,CAACL,IAAI,EAAE;QACfR,KAAK,CAACgB,OAAO,CAAC,6BAA6B,EAAE;UAC3CC,QAAQ,EAAE;QACZ,CAAC,CAAC;QACFZ,OAAO,CAACI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;MAC5B;IACF,CAAC,CAAC,CACDS,KAAK,CAAEC,KAAK,IAAK;MAChBL,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CnB,KAAK,CAACmB,KAAK,CAAC,+BAA+B,EAAE;QAC3CF,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACEf,OAAA;IAAKkB,SAAS,EAAC,2DAA2D;IAAAC,QAAA,eACxEnB,OAAA;MAAKkB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BnB,OAAA;QAAMkB,SAAS,EAAC,gDAAgD;QAAAC,QAAA,eAE9DnB,OAAA;UAAKkB,SAAS,EAAC,kCAAkC;UAAAC,QAAA,eAC/CnB,OAAA;YACEoB,OAAO,EAAEZ,WAAY;YACrBU,SAAS,EAAC,8GAA8G;YACxHG,IAAI,EAAC,QAAQ;YAAAF,QAAA,EACd;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACPzB,OAAA;QAAGkB,SAAS,EAAC,mCAAmC;QAAAC,QAAA,EAAC;MAEjD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CAtDID,KAAK;EAAA,QACOP,UAAU;AAAA;AAAAgC,EAAA,GADtBzB,KAAK;AAwDX,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}